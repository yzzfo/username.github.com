<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>yzzfo | Share for Free - Level Design</title>
    <subtitle>Game Development Learning Resources</subtitle>
    <link rel="self" type="application/atom+xml" href="https://yzzfo.github.io/en/tags/level-design/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://yzzfo.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-01-05T01:00:29+00:00</updated>
    <id>https://yzzfo.github.io/en/tags/level-design/atom.xml</id>
    <entry xml:lang="en">
        <title>PhysX Painter</title>
        <published>2025-01-05T01:00:29+00:00</published>
        <updated>2025-01-05T01:00:29+00:00</updated>
        
        <author>
          <name>
            
              yzzfo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://yzzfo.github.io/en/unity/store/physx-painter/"/>
        <id>https://yzzfo.github.io/en/unity/store/physx-painter/</id>
        
        <content type="html" xml:base="https://yzzfo.github.io/en/unity/store/physx-painter/">&lt;p&gt;&lt;br&gt;&lt;p &gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;euvtFhk&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Join Discord&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; • &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCoRzdGX6ksIZdTX_95LPXgA&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;YouTube&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;All asset-related discussions are moving to &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;euvtFhk&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;. Join us for more info, updates, if you experience any issues or if you just want to say hi!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;○ Important &lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;The old developer of the tool has transferred the rights to another developer. The transfer of rights took place on 23&#x2F;08&#x2F;2021.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;A big update of the tool and the addition of a huge number of functionality will be released soon. If you have ideas for this tool, you can email me: uladzislau78@gmail.com&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;○ Overview&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Physics Scatter allows you to scatter objects that follow physics, directly from the Editor! This means that you won&#x27;t have to painfully rotate, translate, scale, and adjust the objects in the scene to make their position look realistic. Just select the objects you wish to scatter and drop them in the scene. They&#x27;ll fall naturally one on top of the other, or on top of other components of your scene, in the best possible way, with minimum effort for the developer! &lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;○ Why PhysX Painter deserves your attention&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;✓ &lt;&#x2F;strong&gt;You can scatter multiple objects at the same time and apply random rotation or scale to them.&lt;&#x2F;p&gt;&lt;p &gt;&lt;strong&gt;✓ &lt;&#x2F;strong&gt;The Physics Scatter can do anything that a normal object scatter can do. Random rotation, scale, offset placement, global and individual settings for objects, are all included here. But, in addition to this, you can apply physics effects to your objects! Not only those you scattered, but also (if you wish) those that you have lying around in the scene.&lt;&#x2F;p&gt;&lt;p &gt;&lt;strong&gt;✓ &lt;&#x2F;strong&gt;A set of effects is included to create unique scenes. For example, you can scatter objects around and then apply an explosion effect. While the objects are in the air, you can freeze them, and use this amazing effect of objects frozen mid-air during an explosion in your scene! This opens up to a huge amount of new possibilities for scenes creation!&lt;&#x2F;p&gt;&lt;p &gt;&lt;strong&gt;✓ &lt;&#x2F;strong&gt;The effects included are Explosion, Blackhole and SimpleForce. They are fully parameterized, allowing effects of different size, power, vertical offset and more. Check the picture and the video for getting an idea of the amazing things you can easily do with this script!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Looking for a quick reply to your questions? Join us on my &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;euvtFhk&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Discord&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; server&lt;&#x2F;p&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Runtime Asset Database</title>
        <published>2024-12-27T01:01:02+00:00</published>
        <updated>2024-12-27T01:01:02+00:00</updated>
        
        <author>
          <name>
            
              yzzfo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://yzzfo.github.io/en/unity/store/runtime-asset-database/"/>
        <id>https://yzzfo.github.io/en/unity/store/runtime-asset-database/</id>
        
        <content type="html" xml:base="https://yzzfo.github.io/en/unity/store/runtime-asset-database/">&lt;p&gt;Runtime Asset Database simplifies runtime save&#x2F;load implementation in Unity, replicating Unity Editor&#x27;s prefab concepts for runtime asset management.&lt;br&gt;&lt;p &gt;&lt;strong&gt;Runtime Asset Database&lt;&#x2F;strong&gt; is a library designed to simplify the implementation of a runtime save and load subsystem in your Unity application. This library replicates and extends the familiar concepts of prefabs, prefab variants, and assets found within the Unity Editor, making it easier than ever to manage and manipulate game assets at runtime and implement workflows similar to those of the Unity Editor dynamically during runtime.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Unity developers often rely on the convenience and flexibility of the Editor&#x27;s asset management system when designing their games. However, when it comes to implementing a save and load system at runtime, this process can become more complex. The Runtime Asset Database bridges this gap by bringing the essential asset management functionalities you&#x27;re accustomed to into the runtime environment.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;Features:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;p &gt;♥ Runtime Asset Management API.&lt;&#x2F;p&gt;&lt;p &gt;♥ Built on Unity Editor Prefab Concepts.&lt;&#x2F;p&gt;&lt;p &gt;♥ Asset and Asset Variant Support.&lt;&#x2F;p&gt;&lt;p &gt;♥ Extensibility with new types and components.&lt;&#x2F;p&gt;&lt;p &gt;♥ Pluggable External Asset Importers.&lt;&#x2F;p&gt;&lt;p &gt;♥ Addressables Support.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Battlehub0x&#x2F;RuntimeAssetDatabase&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Docs&lt;&#x2F;strong&gt; &lt;&#x2F;a&gt;&lt;strong&gt;| &lt;&#x2F;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;battlehub&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Telegram&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;strong&gt; | &lt;&#x2F;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;modeling&#x2F;runtime-editor-64806&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Runtime Editor&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Infinite Lands: Node-Based World Creator</title>
        <published>2024-12-22T15:04:36+00:00</published>
        <updated>2024-12-22T15:04:36+00:00</updated>
        
        <author>
          <name>
            
              yzzfo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://yzzfo.github.io/en/unity/store/infinite-lands-node-based-world-creator/"/>
        <id>https://yzzfo.github.io/en/unity/store/infinite-lands-node-based-world-creator/</id>
        
        <content type="html" xml:base="https://yzzfo.github.io/en/unity/store/infinite-lands-node-based-world-creator/">&lt;p&gt;Easy, optimized, customizable, and intuitive Node Based Procedural World generation package. To simplify the generation of worlds down to a couple of clicks while having full control with a thousand.&lt;br&gt;&lt;p &gt;This package will provide the tools necessary to build an optimized procedural world. It makes use of Jobs and the Burst Compiler to generate the different meshes needed for the generation of the world, making use of a simple Node Editor while also providing an optimized Vegetation Placer that uses GPU instancing to stay light-weight.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;It is fully customizable to one needs while staying extremely simple and intuitive. An all-in-one package. The provided documentation has all the information needed, and otherwise, feel free to join our &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Q87ZcUvPwz&quot; target=&quot;_blank&quot;&gt;discord server&lt;&#x2F;a&gt; to ask for help.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;a href=&quot;https:&#x2F;&#x2F;ensapra.com&#x2F;packages&#x2F;infinite_lands&quot; target=&quot;_blank&quot;&gt;Documentation&lt;&#x2F;a&gt; | &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;Q87ZcUvPwz&quot; target=&quot;_blank&quot;&gt;Direct Support&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Simple and easy-to-use terrain. Drop a Single Chunk Visualizer to see one chunk, or drop a Infinite Chunk Visualizer to have an Infinite quadtree generation.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;In this package you will find:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;ul&gt;&lt;li &gt;&lt;strong&gt;Node Editor&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;&lt;ul&gt;&lt;li &gt;&lt;strong&gt;Live &lt;&#x2F;strong&gt;editing&lt;&#x2F;li&gt;&lt;li &gt;Variety of nodes&lt;&#x2F;li&gt;&lt;li &gt;Step by Step visualization&lt;&#x2F;li&gt;&lt;li &gt;Biomes support&lt;&#x2F;li&gt;&lt;li &gt;Export to Images&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;li &gt;Optimized mesh generation through &lt;strong&gt;Jobs &lt;&#x2F;strong&gt;and &lt;strong&gt;Burst Compiler&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;&lt;ul&gt;&lt;li &gt;Quadtree and Grid-like infinite terrain generation&lt;&#x2F;li&gt;&lt;li &gt;Automatic LOD creation&lt;&#x2F;li&gt;&lt;li &gt;Option to use Decimated Meshes&lt;&#x2F;li&gt;&lt;li &gt;Procedural terrain shader with &lt;strong&gt;Stochastic Sampling, Triplanar Mapping&lt;&#x2F;strong&gt;, and distance resampling.&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;li &gt;Integrated &lt;strong&gt;Vegetation System&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;&lt;ul&gt;&lt;li &gt;&lt;strong&gt;GPU Instanced&lt;&#x2F;strong&gt; assets&lt;&#x2F;li&gt;&lt;li &gt;Vegetation interaction&lt;&#x2F;li&gt;&lt;li &gt;Color and Normal blending with terrain&lt;&#x2F;li&gt;&lt;li &gt;Dynamic Colliders support&lt;&#x2F;li&gt;&lt;li &gt;Basic Wind System&lt;&#x2F;li&gt;&lt;li &gt;Impostor support&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;li &gt;Floating Point Origin&lt;&#x2F;li&gt;&lt;li &gt;Occlusion, Frustum culling and more optimization techniques&lt;&#x2F;li&gt;&lt;li &gt;Multiple Samples for Built-in, URP and HDRP&lt;&#x2F;li&gt;&lt;li &gt;Intuitive workflow&lt;&#x2F;li&gt;&lt;li &gt;And more updates coming...&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;Why Infinite Lands?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;p &gt;Made by someone who likes to iterate quickly and therefore it&#x27;s optimized and simplified for daily use. It&#x27;s an all-in-package, you buy this and you will never need to buy another asset. There are no extra modules, all future updates will come for free in this one package.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;Dependancies&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;p &gt;To use this asset, you will need:&lt;&#x2F;p&gt;&lt;p &gt;- com.unity.burst: &quot;1.8.11&quot;,&lt;&#x2F;p&gt;&lt;p &gt;- com.unity.collections: &quot;1.4.0&quot;,&lt;&#x2F;p&gt;&lt;p &gt;- com.unity.render-pipelines.core:&quot;12.1.15&quot;,&lt;&#x2F;p&gt;&lt;p &gt;- com.unity.searcher: &quot;4.9.2&quot;,&lt;&#x2F;p&gt;&lt;p &gt;- com.unity.shadergraph: &quot;12.1.15&quot;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;This asset makes use of a version of NaughtyAttributes under the MIT license. See NaughtyAttributes&#x2F;LICENSE.txt for more details&lt;&#x2F;p&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>MonKey - Productivity Commands</title>
        <published>2024-12-08T17:50:27+00:00</published>
        <updated>2024-12-17T13:43:31+00:00</updated>
        
        <author>
          <name>
            
              yzzfo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://yzzfo.github.io/en/unity/store/monkey-productivity-commands/"/>
        <id>https://yzzfo.github.io/en/unity/store/monkey-productivity-commands/</id>
        
        <content type="html" xml:base="https://yzzfo.github.io/en/unity/store/monkey-productivity-commands/">&lt;p&gt;A command manager with tons of commands included to accelerate your Unity workflow and to say goodbye to tedious and repetitive tasks&lt;br&gt;&lt;p &gt;&lt;strong&gt;MonKey&lt;&#x2F;strong&gt; is the ultimate &lt;strong&gt;productivity booster&lt;&#x2F;strong&gt; and &lt;strong&gt;workflow enhancer&lt;&#x2F;strong&gt; for Unity, giving you the easiest and the most efficient way to use the editor thanks to its clever &lt;strong&gt; command manager &lt;&#x2F;strong&gt;!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;Search, Select, Rename &amp;amp; Create faster&lt;&#x2F;strong&gt;, and enjoy a &lt;strong&gt;smoother&lt;&#x2F;strong&gt; editor experience with the smartest MonKey in the Jungle.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;We just released a new plugin called &lt;strong&gt;Grabbit&lt;&#x2F;strong&gt;! You can check it out &lt;a href=&quot;http:&#x2F;&#x2F;u3d.as&#x2F;28rH&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;over there!&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Come to &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;wRzsqxn&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;our Discord channel&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; if you have questions!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Inspired by systems seen in Zbrush, Houdini, Blender or Resharper, MonKey gives you a direct access to time saving and advanced commands for &lt;strong&gt;artists&lt;&#x2F;strong&gt;, &lt;strong&gt;designers&lt;&#x2F;strong&gt; and &lt;strong&gt;programmers&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;&lt;p &gt;MonKey removes the hassle of having to do repetitive or cumbersome tasks or to navigate lengthy menus: type your commands and get the job done faster!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;Useful Links&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽&lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;view&#x2F;monkey-commander&#x2F;monkey&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Our Website&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽&lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;view&#x2F;monkey-user-guide&#x2F;home&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Our Manual&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;MonKeyCommander&#x2F;&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Our Facebook Page&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;Feature Highlight&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;More than 130 commands for Designers, Artists and Programmers&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Custom Commands with Attributes&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Super Quick Fuzzy Search&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Hotkeys Manager&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Powerful Parametric Commands&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Interactive Commands for Level Design&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Supports Menu Items from Unity &amp;amp; Plugins&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Integrated Command Helps &amp;amp; Human-Friendly Naming&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Full Undo Support&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Great Performance &amp;amp; Optimized for Large Projects&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Command Validation&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Flexible Interface&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Ordered Selection&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;C# Editor Utilities&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Active Support and Command Roadmap&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️&lt;strong&gt;One Cute MonKey!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;In Details&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;More than 130 commands for Designers, Artists and Programmers&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey comes packaged with commands made to fit the needs of all Unity users.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;They cover functionalities such as:&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Object Creation&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Object Finding&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Selection&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Renaming&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Scene Management&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Level Design&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Prefab&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Scriptable Object&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽UI&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Physics&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽Comnponents&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;◽And much, much more: &lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;view&#x2F;monkey-user-guide&#x2F;command-list&quot; target=&quot;_blank&quot;&gt;Check out the list of command here!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Custom Commands with Attributes&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Use attributes for a super fast and code independent way to write new commands with advanced customization, and parameters supported.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Simply add an attribute to a static editor method, and it will be available in MonKey!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Super Quick Fuzzy Search &amp;amp; Great Performance&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Our custom search algorithm provides the best human-ready experience!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Multiple ways to access commands including hotkeys, quick names and keyword search.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Monkey is optimized for large projects or big command amount.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Integrated Command Helps &amp;amp; Human-Friendly Naming&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey’s interface includes help for all the commands and names them in order to be quickly understood.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Hotkeys Manager &amp;amp; Quick Names&lt;&#x2F;strong&gt;MonKey detects hotkey conflicts between commands and with menu items, and displays them in search.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Use quick names for a fast alternative to hotkeys!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Parametric Commands &amp;amp; Command Validation:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Parametric commands are fully supported for more intuitive and advanced usages than unity menu items.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey comes with an AutoComplete feature to quickly search for GameObjects, Assets, Enums, or any variable type.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;For parameters, MonKey supports Unity types, c# value types, enums, arrays and more, and can be easily extended!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey also has a Command Validation feature to limit usage of commands to specific scenarios.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Integrates you plugins and Unity’s menu items&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Search for Unity’s menu functionalities and for your plugins’ menu items directly in MonKey!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Interactive Scene Commands for Level Design&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Powerful and emergent commands for level design to use in the scene view.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Combine few functionalities to accelerate your creation!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Includes commands such as collision constraints, distance constraints, object instantiation, measurement, alignment, clamping, component, object replacement, and much more!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Full Undo Support&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey’s commands have a full Undo support (within Unity’s limitations). No fear of experimentation anymore!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Flexible Interface&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;The interface’s UX is designed to be easy to extend and a compromise between intuitive and functional. MonKey’s console can be docked or used as a popup and includes many settings to customize the way it looks and the way you use it.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Ordered Selection&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;MonKey stores the order in which you selected the objects (Unity does not): Make your commands user-friendly and reliable by using our system!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;C# Editor Utilities:&lt;&#x2F;strong&gt;MonKey contains advanced functionalities and access to editor variables such as mouse position, easy undo setup, scene raycast, key pressed events, hierarchy search, and more.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Make your editor utilities creation really shine!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;Active Support and Command Roadmap&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;We are committed to regularly add new commands and functionalities to accelerate your workflow and let you enjoy Unity editor to its full potential!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;✔️ &lt;strong&gt;One Cute MonKey!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Isn’t he? He surely brightens our day!&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;What is Coming Next?&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;As Jungle, we develop tools for Unity, but we mainly are game devs.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;We use MonKey to make games more efficiently, so you can be sure that the plugins will keep on improving: we also benefit from it :)&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;Compatibility&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;Please note that MonKey&#x27;s functionalities are only editor-related. The aim of MonKey is to accelerate the game production: it is not available on runtime.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;⭐&lt;strong&gt;Get Productive With MonKey!&lt;&#x2F;strong&gt;⭐&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;br&gt;&lt;p &gt;We cannot imagine using Unity without MonKey, and we are confident you’ll be convinced too!&lt;&#x2F;p&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Runtime Editor</title>
        <published>2024-11-29T21:19:38+00:00</published>
        <updated>2024-12-17T13:28:15+00:00</updated>
        
        <author>
          <name>
            
              yzzfo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://yzzfo.github.io/en/unity/store/runtime-editor/"/>
        <id>https://yzzfo.github.io/en/unity/store/runtime-editor/</id>
        
        <content type="html" xml:base="https://yzzfo.github.io/en/unity/store/runtime-editor/">&lt;p&gt;Runtime Editor is a set of scripts and prefabs that help you create scene editor, game level editor, or your own modeling application&lt;br&gt;&lt;p &gt;&lt;strong&gt;Runtime Editor&lt;&#x2F;strong&gt; is a set of scripts and prefabs designed to help you create a scene editor, game level editor, or build your own modeling application. It supports drag-and-drop, undo and redo, and a selection API. This asset extends the familiar concepts of prefabs, prefab variants, and assets found in the Unity Editor, making it easier than ever to manage and manipulate game assets at runtime.To implement the user interface and core functions, Runtime Editor uses &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;modeling&#x2F;runtime-transform-handles-65363&quot; target=&quot;_blank&quot;&gt;transform-handles&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;modeling&#x2F;gizmos-77103&quot; target=&quot;_blank&quot;&gt; gizmos&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;slug&#x2F;263289&quot; target=&quot;_blank&quot;&gt;runtime asset database&lt;&#x2F;a&gt; and multiple ui controls including &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;gui&#x2F;menu-control-138619&quot; target=&quot;_blank&quot;&gt;menu&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;gui&#x2F;virtualizing-tree-view-101871&quot; target=&quot;_blank&quot;&gt;virtualizing tree view&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;tools&#x2F;gui&#x2F;dock-panel-138621&quot; target=&quot;_blank&quot;&gt;dock panels.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Battlehub0x&#x2F;RTE_Docs&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Docs &lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;strong&gt;|&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;battlehub&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Telegram&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;p &gt;&lt;strong&gt;Features:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;p &gt;♥ Runtime Asset Database&lt;&#x2F;p&gt;&lt;p &gt;♥ Support for Prefabs and Prefab Variants&lt;&#x2F;p&gt;&lt;p &gt;♥ Support for Addressables&lt;&#x2F;p&gt;&lt;p &gt;♥ Position, Rotation, Scale transform handles;&lt;&#x2F;p&gt;&lt;p &gt;♥ Grid, Box Selection, Scene Gizmo;&lt;&#x2F;p&gt;&lt;p &gt;♥ Transform Handles Mobile;&lt;&#x2F;p&gt;&lt;p &gt;♥ Global &amp;amp; Local coordinates;&lt;&#x2F;p&gt;&lt;p &gt;♥ Local &amp;amp; Center pivot point modes;&lt;&#x2F;p&gt;&lt;p &gt;♥ Vertex &amp;amp; Grid snapping;&lt;&#x2F;p&gt;&lt;p &gt;♥ Gizmos for Colliders, Lights and Audio Sources;&lt;&#x2F;p&gt;&lt;p &gt;♥ Scene navigation, Orthographic &amp;amp; Perspective view;&lt;&#x2F;p&gt;&lt;p &gt;♥ Undo &amp;amp; Redo API;&lt;&#x2F;p&gt;&lt;p &gt;♥  Object Selection API;&lt;&#x2F;p&gt;&lt;p &gt;♥ Object life-cycle events;&lt;&#x2F;p&gt;&lt;p &gt;♥ Play &amp;amp; Edit mode;&lt;&#x2F;p&gt;&lt;p &gt;♥ Configurable Inspector;&lt;&#x2F;p&gt;&lt;p &gt;♥ Component &amp;amp; Material editors;&lt;&#x2F;p&gt;&lt;p &gt;♥ 20+ Built-in property editors;&lt;&#x2F;p&gt;&lt;p &gt;♥ Add Component control;&lt;&#x2F;p&gt;&lt;p &gt;♥ Multiple Scenes and Cameras support;&lt;&#x2F;p&gt;&lt;p &gt;♥ Dock Panels &amp;amp; Windows management;&lt;&#x2F;p&gt;&lt;p &gt;♥ Dialogs, Message Boxes, Confirmations;&lt;&#x2F;p&gt;&lt;p &gt;♥ Easy to extend with new windows;&lt;&#x2F;p&gt;&lt;p &gt;♥ Configurable Main &amp;amp; Context Menu;&lt;&#x2F;p&gt;&lt;p &gt;♥ Fast Virtualizing Tree View;&lt;&#x2F;p&gt;&lt;p &gt;♥ Multiple Projects support;&lt;&#x2F;p&gt;&lt;p &gt;♥ Ability to edit components of multiple selected objects;&lt;&#x2F;p&gt;&lt;p &gt;♥ Universal Render Pipeline support;&lt;&#x2F;p&gt;&lt;p &gt;♥ HD Renderer Pipeline support (Beta).&lt;&#x2F;p&gt;&lt;p &gt;&lt;strong&gt;This asset uses:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;&lt;p &gt;♥ Roslyn .NET compiler;&lt;&#x2F;p&gt;&lt;p &gt;♥ HSV Color Picker;&lt;&#x2F;p&gt;&lt;p &gt;♥ protobuf-net;&lt;&#x2F;p&gt;&lt;p &gt;♥ SharpZipLib.&lt;&#x2F;p&gt;&lt;p &gt;♥ &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebastienros&#x2F;jint&quot; target=&quot;_blank&quot;&gt;Jint&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;br&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
